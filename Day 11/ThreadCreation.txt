package com.cts.thread;

public class ThreadCreation {
	public static void main(String[]args)
	{
		System.out.println("Main Thread"); //By Main thread--only 1 thread
		Thread t= Thread.currentThread();
		t.setPriority(Thread.MAX_PRIORITY -2);
		FirstThread firstThread= new FirstThread();
		SecondThread secondThread= new SecondThread();
		//We have 2 threads-> main, firstThread
		Thread threadOne= new Thread(firstThread);
		Thread threadTwo= new Thread(secondThread);
		threadTwo.setPriority(Thread.MIN_PRIORITY+2);
		threadOne.start();
		threadTwo.start();
		System.out.println("First Thread Priority: " +threadOne.getPriority());
		System.out.println("Second Thread Priority: " +threadTwo.getPriority());
	}
}
	class FirstThread implements Runnable
	{
		@Override
		public void run()
		{
		for(int i=1; i<=10; i++)
			if(i%2==0) {
			System.out.println("First Thread: " +i);
			}
			try 
			{
				Thread.sleep(2000); 
			}
			catch(InterruptedException e)
			{
				e.printStackTrace();
			}
		}
	    }
	
	class SecondThread implements Runnable
	{
		@Override 
		public void run() {
			for(int i=1; i<=10; i++)
			{
				if(i%2 !=0)
				{
					System.out.println("Second Thread: " +i);			
				}
				try {
					Thread.sleep(2000);
				}
				
			catch(InterruptedException e)
			{
				e.printStackTrace();
			}
		}
		}
	}

	


